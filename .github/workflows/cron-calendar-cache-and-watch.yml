name: Cron - Calendar Cache and Watch

on:
  schedule:
    - cron: "*/15 * * * *"
  workflow_dispatch:

jobs:
  cron-calendarCacheAndWatch:
    runs-on: ubuntu-latest
    env:
      APP_URL: ${{ secrets.APP_URL }}
      APP_URL_STAG: ${{ secrets.APP_URL_STAG }}
      CRON_SECRET: ${{ secrets.CRON_SECRET }}

    steps:
      - name: Check if required secrets are available
        run: |
          if [[ -z "${{ secrets.APP_URL }}" || -z "${{ secrets.CRON_SECRET }}" ]]; then
            echo "‚ùå ERROR: Missing required secrets (APP_URL or CRON_SECRET)."
            exit 1
          fi

      - name: cURL request to production
        run: |
          echo "üöÄ Sending request to Production: ${{ secrets.APP_URL }}/api/cron/calendar-cache-and-watch"
          RESPONSE=$(curl -w "%{http_code}" -o response.txt -s -X GET \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.CRON_SECRET }}" \
            "${{ secrets.APP_URL }}/api/cron/calendar-cache-and-watch")

          HTTP_STATUS=$(cat response.txt)
          if [[ $HTTP_STATUS -ne 200 ]]; then
            echo "‚ùå ERROR: Production request failed with status $HTTP_STATUS"
            cat response.txt
            exit 1
          fi
          echo "‚úÖ Production request succeeded."

      - name: cURL request to staging
        run: |
          if [[ -z "${{ secrets.APP_URL_STAG }}" ]]; then
            echo "‚ö†Ô∏è WARNING: Skipping staging request (APP_URL_STAG not set)."
            exit 0
          fi

          echo "üöÄ Sending request to Staging: ${{ secrets.APP_URL_STAG }}/api/cron/calendar-cache-and-watch"
          RESPONSE=$(curl -w "%{http_code}" -o response.txt -s -X GET \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.CRON_SECRET }}" \
            "${{ secrets.APP_URL_STAG }}/api/cron/calendar-cache-and-watch")

          HTTP_STATUS=$(cat response.txt)
          if [[ $HTTP_STATUS -ne 200 ]]; then
            echo "‚ùå ERROR: Staging request failed with status $HTTP_STATUS"
            cat response.txt
            exit 1
          fi
          echo "‚úÖ Staging request succeeded."
